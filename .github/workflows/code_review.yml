name: Code Review

on:
  workflow_call:  # 允许其他仓库调用这个 Workflow
    inputs:
      PULL_REQUEST_ID:
        required: true
        type: number
      COMMIT_ID:
        required: true
        type: string
    secrets:
      LLM_API_KEY:
        required: true
      LLM_API_URL:
        required: true
      THIS_GITHUB_TOKEN:
        required: true
      REPOSITORY_NAME:
        required: true
      REPOSITORY_OWNER:
        required: true
      PROMPT_LEVEL:
        required: true
  pull_request:
    types: [opened, synchronize, reopened]  # 触发条件：PR 创建/更新/重新打开

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout Reviewer Code
        uses: actions/checkout@v4
        if: ${{ github.workflow_ref != '' }}
        with:
          repository: ${{ secrets.REPOSITORY_OWNER }}/${{ secrets.REPOSITORY_NAME }}
          token: ${{ secrets.THIS_GITHUB_TOKEN }}  # 需要有权限的 Token
          ref: ${{ inputs.COMMIT_ID }}
          path: code/${{ secrets.REPOSITORY_NAME }}
          
      - name: Checkout AI Code Reviewer Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || 'main' }}
          path: code/ai_reviewer
      
      - name: Set Python Version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.7'

      - name: Set Pip Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Requirement
        run: |
          ls ./ -a
          ls code -a
          python -m pip install --upgrade pip
          pip install -r code/ai_reviewer/requirements.txt

      - name: Code Review
        env:
            LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
            LLM_API_URL: ${{ secrets.LLM_API_URL }}
            GITHUB_TOKEN: ${{ secrets.THIS_GITHUB_TOKEN }}
            REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
            REPOSITORY_OWNER: ${{ secrets.REPOSITORY_OWNER }}
            PROMPT_LEVEL : ${{ secrets.PROMPT_LEVEL }}
        run: |
          cd code/ai_reviewer/src
          echo "LOG_PATH=code/ai_reviewer/src/app.log" >> $GITHUB_ENV
          python ai_code_reviewer.py ${{ inputs.PULL_REQUEST_ID }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: upload log
          path: ${{ env.LOG_PATH }}
          working-directory: ./
          retention-days: 1
